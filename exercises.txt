ðŸŽ¯ Practice Exercises
Exercise 1: Word Counter
python# Count how many times each word appears
sentence = "the quick brown fox jumps over the lazy dog and the fox ran away"

# Create a dictionary: word â†’ count
# Then print the 3 most common words
Exercise 2: Student Gradebook
python# Create a gradebook with:
# - Student names as keys
# - Dictionaries with subjects and grades as values
# 
# Then:
# 1. Add a new student
# 2. Update a grade
# 3. Calculate each student's average
# 4. Find the student with highest average

Exercise 3: Set Operations
python# Given two lists of email addresses:
list1 = ["alice@email.com", "bob@email.com", "charlie@email.com"]
list2 = ["bob@email.com", "david@email.com", "alice@email.com"]

# Find:
# 1. All unique emails
# 2. Emails in both lists
# 3. Emails only in list1
# 4. Emails in exactly one list
Exercise 4: Performance Challenge
python# You have a list of 10,000 product IDs
products = list(range(10000))

# Write two functions to check if a product exists:
# 1. Using a list (slow)
# 2. Using a set (fast)
#
# Time both and compare!
Exercise 5: Dictionary Comprehension
python# Create a dictionary from 1 to 20 where:
# - Key is the number
# - Value is "even" or "odd", and "prime" or "composite"
# Example: {2: "even prime", 3: "odd prime", 4: "even composite"}

# Create a lambda function that calculates the area of a circle

# Formula: area = Ï€ Ã— rÂ²

# Use 3.14159 for Ï€

circle_area = # Your lambda here

# Test it

print(circle_area(5))    # Should print: 78.53975

print(circle_area(10))   # Should print: 314.159

# BONUS: Use map to calculate areas for multiple radii

radii = [1, 2, 3, 4, 5]

areas = # Your code here

print(areas)  # Should print: [3.14159, 12.56636, 28.27431, 50.26544, 78.53975]


# filter() works like map(), but keeps only items where the lambda returns True

# You have a list of temperatures in Celsius
temperatures = [-5, 0, 10, 15, 20, 25, 30, 35]

# Use filter with a lambda to get only temperatures above 20Â°C
hot_days = list(filter(# Your lambda here, temperatures))

print(hot_days)  # Should print: [25, 30, 35]

# BONUS: Get temperatures below 10Â°C (cold days)
cold_days = # Your code here
print(cold_days)  # Should print: [-5, 0]

# Create a lambda that returns "Even" if a number is even, "Odd" if odd
# Hint: Use this pattern: value_if_true if condition else value_if_false
# Remember: even numbers have x % 2 == 0

check_even_odd = # Your lambda here

print(check_even_odd(4))   # Should print: Even
print(check_even_odd(7))   # Should print: Odd

# BONUS: Use it with map!
numbers = [1, 2, 3, 4, 5, 6]
results = # Your map code here
print(results)  # Should print: ['Odd', 'Even', 'Odd', 'Even', 'Odd', 'Even']

# Create a lambda that calculates the area of a rectangle
# Formula: area = length Ã— width

rectangle_area = # Your lambda here (hint: lambda needs TWO parameters)

print(rectangle_area(5, 10))  # Should print: 50
print(rectangle_area(7, 3))   # Should print: 21